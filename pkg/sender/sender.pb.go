// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        (unknown)
// source: sender/sender.proto

package sender

import (
	http "github.com/dstotijn/hetty/pkg/http"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Request struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Id                 string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ProjectId          string                 `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	SourceRequestLogId string                 `protobuf:"bytes,3,opt,name=source_request_log_id,json=sourceRequestLogId,proto3" json:"source_request_log_id,omitempty"`
	HttpRequest        *http.Request          `protobuf:"bytes,4,opt,name=http_request,json=httpRequest,proto3" json:"http_request,omitempty"`
	HttpResponse       *http.Response         `protobuf:"bytes,10,opt,name=http_response,json=httpResponse,proto3" json:"http_response,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Request) Reset() {
	*x = Request{}
	mi := &file_sender_sender_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_sender_sender_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_sender_sender_proto_rawDescGZIP(), []int{0}
}

func (x *Request) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Request) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *Request) GetSourceRequestLogId() string {
	if x != nil {
		return x.SourceRequestLogId
	}
	return ""
}

func (x *Request) GetHttpRequest() *http.Request {
	if x != nil {
		return x.HttpRequest
	}
	return nil
}

func (x *Request) GetHttpResponse() *http.Response {
	if x != nil {
		return x.HttpResponse
	}
	return nil
}

type RequestsFilter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OnlyInScope   bool                   `protobuf:"varint,1,opt,name=only_in_scope,json=onlyInScope,proto3" json:"only_in_scope,omitempty"`
	SearchExpr    string                 `protobuf:"bytes,2,opt,name=search_expr,json=searchExpr,proto3" json:"search_expr,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestsFilter) Reset() {
	*x = RequestsFilter{}
	mi := &file_sender_sender_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestsFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestsFilter) ProtoMessage() {}

func (x *RequestsFilter) ProtoReflect() protoreflect.Message {
	mi := &file_sender_sender_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestsFilter.ProtoReflect.Descriptor instead.
func (*RequestsFilter) Descriptor() ([]byte, []int) {
	return file_sender_sender_proto_rawDescGZIP(), []int{1}
}

func (x *RequestsFilter) GetOnlyInScope() bool {
	if x != nil {
		return x.OnlyInScope
	}
	return false
}

func (x *RequestsFilter) GetSearchExpr() string {
	if x != nil {
		return x.SearchExpr
	}
	return ""
}

type GetRequestByIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequestId     string                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRequestByIDRequest) Reset() {
	*x = GetRequestByIDRequest{}
	mi := &file_sender_sender_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRequestByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequestByIDRequest) ProtoMessage() {}

func (x *GetRequestByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sender_sender_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequestByIDRequest.ProtoReflect.Descriptor instead.
func (*GetRequestByIDRequest) Descriptor() ([]byte, []int) {
	return file_sender_sender_proto_rawDescGZIP(), []int{2}
}

func (x *GetRequestByIDRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type GetRequestByIDResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Request       *Request               `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRequestByIDResponse) Reset() {
	*x = GetRequestByIDResponse{}
	mi := &file_sender_sender_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRequestByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequestByIDResponse) ProtoMessage() {}

func (x *GetRequestByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sender_sender_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequestByIDResponse.ProtoReflect.Descriptor instead.
func (*GetRequestByIDResponse) Descriptor() ([]byte, []int) {
	return file_sender_sender_proto_rawDescGZIP(), []int{3}
}

func (x *GetRequestByIDResponse) GetRequest() *Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type ListRequestsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRequestsRequest) Reset() {
	*x = ListRequestsRequest{}
	mi := &file_sender_sender_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRequestsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRequestsRequest) ProtoMessage() {}

func (x *ListRequestsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sender_sender_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRequestsRequest.ProtoReflect.Descriptor instead.
func (*ListRequestsRequest) Descriptor() ([]byte, []int) {
	return file_sender_sender_proto_rawDescGZIP(), []int{4}
}

type ListRequestsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Requests      []*Request             `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRequestsResponse) Reset() {
	*x = ListRequestsResponse{}
	mi := &file_sender_sender_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRequestsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRequestsResponse) ProtoMessage() {}

func (x *ListRequestsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sender_sender_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRequestsResponse.ProtoReflect.Descriptor instead.
func (*ListRequestsResponse) Descriptor() ([]byte, []int) {
	return file_sender_sender_proto_rawDescGZIP(), []int{5}
}

func (x *ListRequestsResponse) GetRequests() []*Request {
	if x != nil {
		return x.Requests
	}
	return nil
}

type CloneFromRequestLogRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequestLogId  string                 `protobuf:"bytes,1,opt,name=request_log_id,json=requestLogId,proto3" json:"request_log_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloneFromRequestLogRequest) Reset() {
	*x = CloneFromRequestLogRequest{}
	mi := &file_sender_sender_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloneFromRequestLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloneFromRequestLogRequest) ProtoMessage() {}

func (x *CloneFromRequestLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sender_sender_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloneFromRequestLogRequest.ProtoReflect.Descriptor instead.
func (*CloneFromRequestLogRequest) Descriptor() ([]byte, []int) {
	return file_sender_sender_proto_rawDescGZIP(), []int{6}
}

func (x *CloneFromRequestLogRequest) GetRequestLogId() string {
	if x != nil {
		return x.RequestLogId
	}
	return ""
}

type CloneFromRequestLogResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Request       *Request               `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloneFromRequestLogResponse) Reset() {
	*x = CloneFromRequestLogResponse{}
	mi := &file_sender_sender_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloneFromRequestLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloneFromRequestLogResponse) ProtoMessage() {}

func (x *CloneFromRequestLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sender_sender_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloneFromRequestLogResponse.ProtoReflect.Descriptor instead.
func (*CloneFromRequestLogResponse) Descriptor() ([]byte, []int) {
	return file_sender_sender_proto_rawDescGZIP(), []int{7}
}

func (x *CloneFromRequestLogResponse) GetRequest() *Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type SendRequestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequestId     string                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendRequestRequest) Reset() {
	*x = SendRequestRequest{}
	mi := &file_sender_sender_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendRequestRequest) ProtoMessage() {}

func (x *SendRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sender_sender_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendRequestRequest.ProtoReflect.Descriptor instead.
func (*SendRequestRequest) Descriptor() ([]byte, []int) {
	return file_sender_sender_proto_rawDescGZIP(), []int{8}
}

func (x *SendRequestRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type SendRequestResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Request       *Request               `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendRequestResponse) Reset() {
	*x = SendRequestResponse{}
	mi := &file_sender_sender_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendRequestResponse) ProtoMessage() {}

func (x *SendRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sender_sender_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendRequestResponse.ProtoReflect.Descriptor instead.
func (*SendRequestResponse) Descriptor() ([]byte, []int) {
	return file_sender_sender_proto_rawDescGZIP(), []int{9}
}

func (x *SendRequestResponse) GetRequest() *Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type DeleteRequestsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRequestsRequest) Reset() {
	*x = DeleteRequestsRequest{}
	mi := &file_sender_sender_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRequestsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequestsRequest) ProtoMessage() {}

func (x *DeleteRequestsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sender_sender_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequestsRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequestsRequest) Descriptor() ([]byte, []int) {
	return file_sender_sender_proto_rawDescGZIP(), []int{10}
}

type DeleteRequestsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRequestsResponse) Reset() {
	*x = DeleteRequestsResponse{}
	mi := &file_sender_sender_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRequestsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequestsResponse) ProtoMessage() {}

func (x *DeleteRequestsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sender_sender_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequestsResponse.ProtoReflect.Descriptor instead.
func (*DeleteRequestsResponse) Descriptor() ([]byte, []int) {
	return file_sender_sender_proto_rawDescGZIP(), []int{11}
}

type CreateOrUpdateRequestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Request       *Request               `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateOrUpdateRequestRequest) Reset() {
	*x = CreateOrUpdateRequestRequest{}
	mi := &file_sender_sender_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateOrUpdateRequestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrUpdateRequestRequest) ProtoMessage() {}

func (x *CreateOrUpdateRequestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sender_sender_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrUpdateRequestRequest.ProtoReflect.Descriptor instead.
func (*CreateOrUpdateRequestRequest) Descriptor() ([]byte, []int) {
	return file_sender_sender_proto_rawDescGZIP(), []int{12}
}

func (x *CreateOrUpdateRequestRequest) GetRequest() *Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type CreateOrUpdateRequestResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Request       *Request               `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateOrUpdateRequestResponse) Reset() {
	*x = CreateOrUpdateRequestResponse{}
	mi := &file_sender_sender_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateOrUpdateRequestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrUpdateRequestResponse) ProtoMessage() {}

func (x *CreateOrUpdateRequestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sender_sender_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrUpdateRequestResponse.ProtoReflect.Descriptor instead.
func (*CreateOrUpdateRequestResponse) Descriptor() ([]byte, []int) {
	return file_sender_sender_proto_rawDescGZIP(), []int{13}
}

func (x *CreateOrUpdateRequestResponse) GetRequest() *Request {
	if x != nil {
		return x.Request
	}
	return nil
}

type SetRequestsFilterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filter        *RequestsFilter        `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetRequestsFilterRequest) Reset() {
	*x = SetRequestsFilterRequest{}
	mi := &file_sender_sender_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetRequestsFilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRequestsFilterRequest) ProtoMessage() {}

func (x *SetRequestsFilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sender_sender_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRequestsFilterRequest.ProtoReflect.Descriptor instead.
func (*SetRequestsFilterRequest) Descriptor() ([]byte, []int) {
	return file_sender_sender_proto_rawDescGZIP(), []int{14}
}

func (x *SetRequestsFilterRequest) GetFilter() *RequestsFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type SetRequestsFilterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetRequestsFilterResponse) Reset() {
	*x = SetRequestsFilterResponse{}
	mi := &file_sender_sender_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetRequestsFilterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRequestsFilterResponse) ProtoMessage() {}

func (x *SetRequestsFilterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sender_sender_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRequestsFilterResponse.ProtoReflect.Descriptor instead.
func (*SetRequestsFilterResponse) Descriptor() ([]byte, []int) {
	return file_sender_sender_proto_rawDescGZIP(), []int{15}
}

type GetRequestsFilterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRequestsFilterRequest) Reset() {
	*x = GetRequestsFilterRequest{}
	mi := &file_sender_sender_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRequestsFilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequestsFilterRequest) ProtoMessage() {}

func (x *GetRequestsFilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sender_sender_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequestsFilterRequest.ProtoReflect.Descriptor instead.
func (*GetRequestsFilterRequest) Descriptor() ([]byte, []int) {
	return file_sender_sender_proto_rawDescGZIP(), []int{16}
}

type GetRequestsFilterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filter        *RequestsFilter        `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRequestsFilterResponse) Reset() {
	*x = GetRequestsFilterResponse{}
	mi := &file_sender_sender_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRequestsFilterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequestsFilterResponse) ProtoMessage() {}

func (x *GetRequestsFilterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sender_sender_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequestsFilterResponse.ProtoReflect.Descriptor instead.
func (*GetRequestsFilterResponse) Descriptor() ([]byte, []int) {
	return file_sender_sender_proto_rawDescGZIP(), []int{17}
}

func (x *GetRequestsFilterResponse) GetFilter() *RequestsFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

var File_sender_sender_proto protoreflect.FileDescriptor

var file_sender_sender_proto_rawDesc = []byte{
	0x0a, 0x13, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x2f, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x1a, 0x0f, 0x68,
	0x74, 0x74, 0x70, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe4,
	0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x15, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0c,
	0x68, 0x74, 0x74, 0x70, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68, 0x65, 0x74, 0x74, 0x79, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0b, 0x68, 0x74, 0x74, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x0d, 0x68, 0x74, 0x74, 0x70, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x68, 0x65, 0x74, 0x74, 0x79, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c, 0x68, 0x74, 0x74, 0x70, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x55, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0d, 0x6f, 0x6e, 0x6c, 0x79, 0x5f,
	0x69, 0x6e, 0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x6f, 0x6e, 0x6c, 0x79, 0x49, 0x6e, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x65, 0x78, 0x70, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x78, 0x70, 0x72, 0x22, 0x36, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x22, 0x43, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29,
	0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x43, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0x42, 0x0a, 0x1a, 0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x46, 0x72,
	0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x6c,
	0x6f, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x49, 0x64, 0x22, 0x48, 0x0a, 0x1b, 0x43, 0x6c, 0x6f,
	0x6e, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x6f, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x33, 0x0a, 0x12, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x40, 0x0a, 0x13, 0x53, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x29, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x17, 0x0a, 0x15, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x18, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x49, 0x0a,
	0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a,
	0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4a, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x07, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x4a, 0x0a, 0x18, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2e, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x22, 0x1b, 0x0a, 0x19, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x0a,
	0x18, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4b, 0x0a, 0x19, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x32, 0xce, 0x05, 0x0a, 0x0d, 0x53, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x51, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x49, 0x44, 0x12, 0x1d, 0x2e, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x49,
	0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0c, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x1b, 0x2e, 0x73, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x20, 0x2e,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x5a, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x20, 0x2e, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x66, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x2e, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x25, 0x2e, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f,
	0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x13, 0x43, 0x6c, 0x6f, 0x6e,
	0x65, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x12,
	0x22, 0x2e, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x46, 0x72,
	0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x43, 0x6c, 0x6f,
	0x6e, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x6f, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0b, 0x53, 0x65,
	0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x53,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x1d, 0x2e, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x73, 0x74, 0x6f, 0x74, 0x69, 0x6a, 0x6e, 0x2f, 0x68,
	0x65, 0x74, 0x74, 0x79, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sender_sender_proto_rawDescOnce sync.Once
	file_sender_sender_proto_rawDescData = file_sender_sender_proto_rawDesc
)

func file_sender_sender_proto_rawDescGZIP() []byte {
	file_sender_sender_proto_rawDescOnce.Do(func() {
		file_sender_sender_proto_rawDescData = protoimpl.X.CompressGZIP(file_sender_sender_proto_rawDescData)
	})
	return file_sender_sender_proto_rawDescData
}

var file_sender_sender_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_sender_sender_proto_goTypes = []any{
	(*Request)(nil),                       // 0: sender.Request
	(*RequestsFilter)(nil),                // 1: sender.RequestsFilter
	(*GetRequestByIDRequest)(nil),         // 2: sender.GetRequestByIDRequest
	(*GetRequestByIDResponse)(nil),        // 3: sender.GetRequestByIDResponse
	(*ListRequestsRequest)(nil),           // 4: sender.ListRequestsRequest
	(*ListRequestsResponse)(nil),          // 5: sender.ListRequestsResponse
	(*CloneFromRequestLogRequest)(nil),    // 6: sender.CloneFromRequestLogRequest
	(*CloneFromRequestLogResponse)(nil),   // 7: sender.CloneFromRequestLogResponse
	(*SendRequestRequest)(nil),            // 8: sender.SendRequestRequest
	(*SendRequestResponse)(nil),           // 9: sender.SendRequestResponse
	(*DeleteRequestsRequest)(nil),         // 10: sender.DeleteRequestsRequest
	(*DeleteRequestsResponse)(nil),        // 11: sender.DeleteRequestsResponse
	(*CreateOrUpdateRequestRequest)(nil),  // 12: sender.CreateOrUpdateRequestRequest
	(*CreateOrUpdateRequestResponse)(nil), // 13: sender.CreateOrUpdateRequestResponse
	(*SetRequestsFilterRequest)(nil),      // 14: sender.SetRequestsFilterRequest
	(*SetRequestsFilterResponse)(nil),     // 15: sender.SetRequestsFilterResponse
	(*GetRequestsFilterRequest)(nil),      // 16: sender.GetRequestsFilterRequest
	(*GetRequestsFilterResponse)(nil),     // 17: sender.GetRequestsFilterResponse
	(*http.Request)(nil),                  // 18: hetty.http.v1.Request
	(*http.Response)(nil),                 // 19: hetty.http.v1.Response
}
var file_sender_sender_proto_depIdxs = []int32{
	18, // 0: sender.Request.http_request:type_name -> hetty.http.v1.Request
	19, // 1: sender.Request.http_response:type_name -> hetty.http.v1.Response
	0,  // 2: sender.GetRequestByIDResponse.request:type_name -> sender.Request
	0,  // 3: sender.ListRequestsResponse.requests:type_name -> sender.Request
	0,  // 4: sender.CloneFromRequestLogResponse.request:type_name -> sender.Request
	0,  // 5: sender.SendRequestResponse.request:type_name -> sender.Request
	0,  // 6: sender.CreateOrUpdateRequestRequest.request:type_name -> sender.Request
	0,  // 7: sender.CreateOrUpdateRequestResponse.request:type_name -> sender.Request
	1,  // 8: sender.SetRequestsFilterRequest.filter:type_name -> sender.RequestsFilter
	1,  // 9: sender.GetRequestsFilterResponse.filter:type_name -> sender.RequestsFilter
	2,  // 10: sender.SenderService.GetRequestByID:input_type -> sender.GetRequestByIDRequest
	4,  // 11: sender.SenderService.ListRequests:input_type -> sender.ListRequestsRequest
	14, // 12: sender.SenderService.SetRequestsFilter:input_type -> sender.SetRequestsFilterRequest
	16, // 13: sender.SenderService.GetRequestsFilter:input_type -> sender.GetRequestsFilterRequest
	12, // 14: sender.SenderService.CreateOrUpdateRequest:input_type -> sender.CreateOrUpdateRequestRequest
	6,  // 15: sender.SenderService.CloneFromRequestLog:input_type -> sender.CloneFromRequestLogRequest
	8,  // 16: sender.SenderService.SendRequest:input_type -> sender.SendRequestRequest
	10, // 17: sender.SenderService.DeleteRequests:input_type -> sender.DeleteRequestsRequest
	3,  // 18: sender.SenderService.GetRequestByID:output_type -> sender.GetRequestByIDResponse
	5,  // 19: sender.SenderService.ListRequests:output_type -> sender.ListRequestsResponse
	15, // 20: sender.SenderService.SetRequestsFilter:output_type -> sender.SetRequestsFilterResponse
	17, // 21: sender.SenderService.GetRequestsFilter:output_type -> sender.GetRequestsFilterResponse
	13, // 22: sender.SenderService.CreateOrUpdateRequest:output_type -> sender.CreateOrUpdateRequestResponse
	7,  // 23: sender.SenderService.CloneFromRequestLog:output_type -> sender.CloneFromRequestLogResponse
	9,  // 24: sender.SenderService.SendRequest:output_type -> sender.SendRequestResponse
	11, // 25: sender.SenderService.DeleteRequests:output_type -> sender.DeleteRequestsResponse
	18, // [18:26] is the sub-list for method output_type
	10, // [10:18] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_sender_sender_proto_init() }
func file_sender_sender_proto_init() {
	if File_sender_sender_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sender_sender_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sender_sender_proto_goTypes,
		DependencyIndexes: file_sender_sender_proto_depIdxs,
		MessageInfos:      file_sender_sender_proto_msgTypes,
	}.Build()
	File_sender_sender_proto = out.File
	file_sender_sender_proto_rawDesc = nil
	file_sender_sender_proto_goTypes = nil
	file_sender_sender_proto_depIdxs = nil
}
